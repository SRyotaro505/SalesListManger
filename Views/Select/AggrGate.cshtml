@model DBConTemplate.Models.SelectModel
@{
    var maxcnt = 0;
    var barKeyList = new List<string>();
}
@section scripts{
    @Scripts.Render("~/Scripts/Chart.js")
    <script type="text/javascript">
        $(function () {
            var auth = sessionStorage.getItem("auth");
            if (auth != 1) {
                window.location.href = "../Login/Login";
            }
            @if (Model.dataCount > 15)
            {
                maxcnt = 15;
            }
            else if (Model.dataCount > 30)
            {
                maxcnt = 30;
            }
            else if (Model.dataCount > 50)
            {
                maxcnt = 50;
            }
            makeBarChart();
            makePieChart();
        });

        function makeBarChart() {
            var ctx = $("#myBarChart");
            var myBarChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: [@foreach (var Item in Model.barChartDic.Select((x, i) => new { Index = i, Value = x }))
                                    {
                                        if(Item.Index == Model.barChartDic.Count() - 1)
                                        {
                                            <text>
                                            '@Item.Value.Key'
                                            </text>
                                        }
                                        else
                                        {
                                            <text>
                                            '@Item.Value.Key',
                                            </text>
                                        }
                                }],
                    datasets: [
                        {
                        label: 'ステータス別集計',
                            data:[@foreach (var Item in Model.barChartDic.Select((x, i) => new { Index = i, Value = x }))
                                    {
                                        if(Item.Index == Model.barChartDic.Count() - 1)
                                        {
                                            <text>
                                            '@Item.Value.Value'
                                            </text>
                                        }
                                        else
                                        {
                                            <text>
                                            '@Item.Value.Value',
                                            </text>
                                        }
                                }],
                            backgroundColor: "#485696"
                        }
                    ]
                },
                options: {
                    title: {
                        display: true,
                        text: 'ステータス別件数'
                    },
                    scales: {
                        yAxes: [{
                            ticks: {
                                suggestedMax: @maxcnt,
                                suggestedMin: 0,
                                stepSize: 1,
                                callback: function (value, index, values) {
                                    return value + '件'
                                }
                                }
                        }]
                    },
                }
            });
        }

    function makePieChart() {
        var colors = [];
            var ctx = document.getElementById("myPieChart");
            var colorCnt = @Model.pieChartDic.Count;
            for (var i = 0; i <colorCnt; i++) {
                var randomColor = "rgb(" + (~~(256 * Math.random())) + ", " + (~~(256 * Math.random())) + ", " + (~~(256 * Math.random())) + ")";
                colors.push(randomColor);
            }
                var myPieChart = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: [@foreach (var Item in Model.pieChartDic.Select((x, i) => new { Index = i, Value = x }))
                                    {
                                        if(Item.Index == Model.pieChartDic.Count() - 1)
                                        {
                                            <text>
                                            '@Item.Value.Key'
                                            </text>
                                        }
                                        else
                                        {
                                            <text>
                                            '@Item.Value.Key',
                                            </text>
                                        }
                                }],
                    datasets: [{
                        backgroundColor: colors,
                        data: [@foreach (var Item in Model.pieChartDic.Select((x, i) => new { Index = i, Value = x }))
                                    {
                                        if(Item.Index == Model.pieChartDic.Count() - 1)
                                        {
                                            <text>
                                            '@Item.Value.Value'
                                            </text>
                                        }
                                        else
                                        {
                                            <text>
                                            '@Item.Value.Value',
                                            </text>
                                        }
                                }]
                    }]
                },
                options: {
                    title: {
                        display: true,
                        text: '担当件数'
                    }
                }
            });
        }
    </script>
}

<h2>データ集計</h2>

<div class="jumbotron">
    <div class="col-12">
        <canvas id="myBarChart" style="position:relative; height:70vh; width:80vw"></canvas>
    </div>
</div>

<div class="jumbotron">
    <div class="row">
        <div class="col-9 text-left">
            <canvas id="myPieChart" style="position:relative; height:70vh; width:80vw"></canvas>
        </div>
        <ul class="col-3 text-left" id="pieChartNo">
            @foreach (var Item in Model.pieChartDic.Select((x, i) => new { Index = i, Value = x }))
            {
                if (Item.Index == Model.pieChartDic.Count() - 1)
                {
                    <li class="col-12 text-left">
                        <h4>@Item.Value.Key : @Item.Value.Value 件</h4>
                    </li>
                }
                else
                {
                    <li class="col-12 text-left mb-3">
                        <h4>@Item.Value.Key : @Item.Value.Value 件</h4>
                    </li>
                }
            }
        </ul>
    </div>
</div>
